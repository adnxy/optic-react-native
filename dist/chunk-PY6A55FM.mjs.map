{"version":3,"sources":["../src/store/metricsStore.ts"],"sourcesContent":["import { create } from 'zustand';\n\ninterface ScreenMetrics {\n  tti: number | null;\n  reRenderCounts: Record<string, number>;\n}\n\ninterface MetricsState {\n  currentScreen: string | null;\n  screens: Record<string, ScreenMetrics>;\n  startupTime: number | null;\n  setCurrentScreen: (screenName: string) => void;\n  setTTI: (tti: number | null) => void;\n  setStartupTime: (startupTime: number) => void;\n  incrementReRender: (componentName: string) => void;\n}\n\nconst createScreenMetrics = (): ScreenMetrics => ({\n  tti: null,\n  reRenderCounts: {},\n});\n\nexport const useMetricsStore = create<MetricsState>((set, get) => ({\n  currentScreen: null,\n  screens: {},\n  startupTime: null,\n  setCurrentScreen: (screenName) => {\n    const state = get();\n    // Only update if the screen actually changed\n    if (state.currentScreen !== screenName) {\n      console.log(`[useoptic] Setting current screen to: ${screenName}`);\n      set((state) => {\n        // Initialize metrics for new screen if it doesn't exist\n        if (!state.screens[screenName]) {\n          return {\n            currentScreen: screenName,\n            screens: {\n              ...state.screens,\n              [screenName]: createScreenMetrics(),\n            },\n          };\n        }\n        return { currentScreen: screenName };\n      });\n    }\n  },\n  setTTI: (tti) => {\n    const state = get();\n    if (!state.currentScreen) {\n      console.log('[useoptic] Cannot set TTI: no current screen');\n      return;\n    }\n    \n    // Only update if TTI actually changed\n    const currentTTI = state.screens[state.currentScreen]?.tti;\n    if (currentTTI !== tti) {\n      console.log(`[useoptic] Setting TTI for ${state.currentScreen}: ${tti}ms`);\n      set((state) => ({\n        screens: {\n          ...state.screens,\n          [state.currentScreen!]: {\n            ...state.screens[state.currentScreen!],\n            tti,\n          },\n        },\n      }));\n    }\n  },\n  setStartupTime: (startupTime) => {\n    const state = get();\n    // Only update if startup time actually changed\n    if (state.startupTime !== startupTime) {\n      console.log(`[useoptic] Setting startup time: ${startupTime}ms`);\n      set({ startupTime });\n    }\n  },\n  incrementReRender: (componentName) => {\n    const state = get();\n    if (!state.currentScreen) return;\n    \n    const currentScreen = state.screens[state.currentScreen];\n    const currentCount = currentScreen.reRenderCounts[componentName] || 0;\n    \n    set((state) => ({\n      screens: {\n        ...state.screens,\n        [state.currentScreen!]: {\n          ...currentScreen,\n          reRenderCounts: {\n            ...currentScreen.reRenderCounts,\n            [componentName]: currentCount + 1,\n          },\n        },\n      },\n    }));\n  },\n}));"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA,SAAS,cAAc;AAiBvB,IAAM,sBAAsB,OAAsB;AAAA,EAChD,KAAK;AAAA,EACL,gBAAgB,CAAC;AACnB;AAEO,IAAM,kBAAkB,OAAqB,CAAC,KAAK,SAAS;AAAA,EACjE,eAAe;AAAA,EACf,SAAS,CAAC;AAAA,EACV,aAAa;AAAA,EACb,kBAAkB,CAAC,eAAe;AAChC,UAAM,QAAQ,IAAI;AAElB,QAAI,MAAM,kBAAkB,YAAY;AACtC,cAAQ,IAAI,yCAAyC,UAAU,EAAE;AACjE,UAAI,CAACA,WAAU;AAEb,YAAI,CAACA,OAAM,QAAQ,UAAU,GAAG;AAC9B,iBAAO;AAAA,YACL,eAAe;AAAA,YACf,SAAS,iCACJA,OAAM,UADF;AAAA,cAEP,CAAC,UAAU,GAAG,oBAAoB;AAAA,YACpC;AAAA,UACF;AAAA,QACF;AACA,eAAO,EAAE,eAAe,WAAW;AAAA,MACrC,CAAC;AAAA,IACH;AAAA,EACF;AAAA,EACA,QAAQ,CAAC,QAAQ;AA9CnB;AA+CI,UAAM,QAAQ,IAAI;AAClB,QAAI,CAAC,MAAM,eAAe;AACxB,cAAQ,IAAI,8CAA8C;AAC1D;AAAA,IACF;AAGA,UAAM,cAAa,WAAM,QAAQ,MAAM,aAAa,MAAjC,mBAAoC;AACvD,QAAI,eAAe,KAAK;AACtB,cAAQ,IAAI,8BAA8B,MAAM,aAAa,KAAK,GAAG,IAAI;AACzE,UAAI,CAACA,YAAW;AAAA,QACd,SAAS,iCACJA,OAAM,UADF;AAAA,UAEP,CAACA,OAAM,aAAc,GAAG,iCACnBA,OAAM,QAAQA,OAAM,aAAc,IADf;AAAA,YAEtB;AAAA,UACF;AAAA,QACF;AAAA,MACF,EAAE;AAAA,IACJ;AAAA,EACF;AAAA,EACA,gBAAgB,CAAC,gBAAgB;AAC/B,UAAM,QAAQ,IAAI;AAElB,QAAI,MAAM,gBAAgB,aAAa;AACrC,cAAQ,IAAI,oCAAoC,WAAW,IAAI;AAC/D,UAAI,EAAE,YAAY,CAAC;AAAA,IACrB;AAAA,EACF;AAAA,EACA,mBAAmB,CAAC,kBAAkB;AACpC,UAAM,QAAQ,IAAI;AAClB,QAAI,CAAC,MAAM,cAAe;AAE1B,UAAM,gBAAgB,MAAM,QAAQ,MAAM,aAAa;AACvD,UAAM,eAAe,cAAc,eAAe,aAAa,KAAK;AAEpE,QAAI,CAACA,YAAW;AAAA,MACd,SAAS,iCACJA,OAAM,UADF;AAAA,QAEP,CAACA,OAAM,aAAc,GAAG,iCACnB,gBADmB;AAAA,UAEtB,gBAAgB,iCACX,cAAc,iBADH;AAAA,YAEd,CAAC,aAAa,GAAG,eAAe;AAAA,UAClC;AAAA,QACF;AAAA,MACF;AAAA,IACF,EAAE;AAAA,EACJ;AACF,EAAE;","names":["state"]}