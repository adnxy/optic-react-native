{"version":3,"sources":["../src/metrics/startup.ts"],"sourcesContent":["export {};\n\nimport { useMetricsStore } from '../store/metricsStore';\n\n// Global app start time (should be set as early as possible in the app entrypoint)\ndeclare global {\n  var __OPTIC_APP_START_TIME__: number | undefined;\n}\n\nif (global.__OPTIC_APP_START_TIME__ === undefined) {\n  global.__OPTIC_APP_START_TIME__ = Date.now();\n}\n\n/**\n * Measures time since global app start and logs it to the console.\n * Uses setTimeout(0) to simulate async readiness.\n */\nexport function trackStartupTime() {\n  setTimeout(() => {\n    const start = global.__OPTIC_APP_START_TIME__ || Date.now();\n    const duration = Date.now() - start;\n    useMetricsStore.getState().setStartupTime(duration);\n    console.log(`[useoptic] Startup time: ${duration}ms`);\n  }, 0);\n}\n"],"mappings":";;;;;AASA,IAAI,OAAO,6BAA6B,QAAW;AACjD,SAAO,2BAA2B,KAAK,IAAI;AAC7C;AAMO,SAAS,mBAAmB;AACjC,aAAW,MAAM;AACf,UAAM,QAAQ,OAAO,4BAA4B,KAAK,IAAI;AAC1D,UAAM,WAAW,KAAK,IAAI,IAAI;AAC9B,oBAAgB,SAAS,EAAE,eAAe,QAAQ;AAClD,YAAQ,IAAI,4BAA4B,QAAQ,IAAI;AAAA,EACtD,GAAG,CAAC;AACN;","names":[]}